syntax = "proto3";

package saffron.runtime;

import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/wrappers.proto";

import "common/Identity.proto";
import "Task.proto";

service Runtime {
  // Primitive
  rpc FetchPayload(FetchPayloadRequest) returns (FetchPayloadResponse);
  rpc FetchTask(FetchTaskRequest) returns (FetchTaskResponse);

  // Logic Railway
  rpc IsRailwayOk(IsRailwayOkRequest) returns (google.protobuf.BoolValue);
  rpc SwitchRailway(RailwaySwitchRequest) returns (google.protobuf.Empty);
  rpc GetRailwayError(GetRailwayErrorRequest) returns (GetRailwayErrorResponse);

  // Database Agent
  rpc Acquire(AcquireRequest) returns (AcquireResponse);
  rpc Release(ReleaseRequest) returns (google.protobuf.Empty);
  rpc Query(QueryRequest) returns (QueryResponse);
  rpc Execute(ExecuteRequest) returns (ExecuteResponse);
  rpc BeginTransaction(BeginTransactionRequest) returns (google.protobuf.Empty);
  rpc CommitTransaction(CommitTransactionRequest) returns (google.protobuf.Empty);
  rpc RollbackTransaction(RollbackTransactionRequest) returns (google.protobuf.Empty);

  // Event Agent

  // FileStorage Agent

  // LocalStorage Agent

  // Logging Agent
  rpc Log(LogRequest) returns (google.protobuf.Empty);

  // Mail Agent

  // Result Agent

  // SessionStorage Agent
}

// Primitive
message FetchPayloadRequest {
  saffron.execution.TaskKey task_key = 1;
}

message FetchPayloadResponse {
  saffron.execution.TaskPayload task_payload = 1;
}

message FetchTaskRequest {
  saffron.execution.TaskKey task_key = 1;
}

message FetchTaskResponse {
  saffron.execution.Task task = 1;
}

// Logic Railway
message IsRailwayOkRequest {
  saffron.execution.TaskKey task_key = 1;
}

message RailwaySwitchRequest {
  saffron.execution.TaskKey task_key = 1;
  string name = 2;
  string message = 3;
}

message GetRailwayErrorRequest {
  saffron.execution.TaskKey task_key = 1;
}

message GetRailwayErrorResponse {
  optional RailwayError error = 1;
}

message RailwayError {
  string name = 1;
  string message = 2;
  saffron.common.VersionedIdentity logic_identity = 3;
}

// Database Agent
message AcquireRequest {
  saffron.execution.TaskKey task_key = 1;
  string name = 2;
}

message AcquireResponse {
  string data_source_id = 1;
  string connection_id = 2;
}

message ReleaseRequest {
  saffron.execution.TaskKey task_key = 1;
  string data_source_id = 2;
  string connection_id = 3;
}

message QueryRequest {
  saffron.execution.TaskKey task_key = 1;
  string data_source_id = 2;
  string connection_id = 3;
  string raw_sql = 4;
  google.protobuf.ListValue params = 5;
}

message QueryResponse {
  repeated DatabaseColumn columns = 1;
  repeated StructArray rows = 2;
}

message StructArray {
  repeated google.protobuf.Struct inner = 1;
}

message ExecuteRequest {
  saffron.execution.TaskKey task_key = 1;
  string data_source_id = 2;
  string connection_id = 3;
  string raw_sql = 4;
  repeated google.protobuf.Value params = 5;
}

message ExecuteResponse {
  uint64 affected_rows = 1;
}

message BeginTransactionRequest {
  saffron.execution.TaskKey task_key = 1;
  string data_source_id = 2;
  string connection_id = 3;
}

message CommitTransactionRequest {
  saffron.execution.TaskKey task_key = 1;
  string data_source_id = 2;
  string connection_id = 3;
}

message RollbackTransactionRequest {
  saffron.execution.TaskKey task_key = 1;
  string data_source_id = 2;
  string connection_id = 3;
}

message DatabaseColumn {
  string name = 1;
  string type = 2;
}

// Logging Agent
message LogRequest {
  saffron.execution.TaskKey task_key = 1;
  string level = 2;
  string message = 3;
}
